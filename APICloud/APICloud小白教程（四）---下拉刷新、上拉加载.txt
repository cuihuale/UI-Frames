
知识点：

       1、实现下拉刷新

       2、实现上拉加载

       3、上拉分页（加载下一页数据）原理

知识点一：下拉刷新


    app中没有所谓的刷新页面的概念，一般都是通过api.ajax或者js模板引擎来重新渲染页面。实现上拉刷新非常简单，只需要调用api.setRefreshHeaderInfo方法就可以，

    这时候页面就会出现加载中的动画（记住这个方法一般放在Frame页面中），代码如下：

    api.setRefreshHeaderInfo({
        visible: true,
        loadingImg: 'widget://image/refresh.png',
        bgColor: '#ccc',
        textColor: '#fff',
        textDown: '下拉刷新...',
        textUp: '松开刷新...',
        showTime: true
    }, function(ret, err){
        // 这里写重新渲染页面的方法
    });

    特别注意：当页面渲染完毕后要调用 api.refreshHeaderLoadDone() 方法恢复正常状态

    api.setRefreshHeaderInfo({
    visible: true,
    loadingImg: 'widget://image/refresh.png',
    bgColor: '#ccc',
    textColor: '#fff',
    textDown: '下拉刷新...',
    textUp: '松开刷新...',
    showTime: true
    }, function(ret, err){
    // 这里写重新渲染页面的方法

    api.refreshHeaderLoadDone();      -----------------这个方法
    });

    如果需要页面一进来自动下拉刷新可以调用：api.refreshHeaderLoading();

 知识点二：上拉加载

    一般下拉刷新和上拉加载时同时配套使用的，上拉加载一般用户请求下一页数据（正常情况下用于分页），代码也非常简单，

   只要是监听滚动条事件，可以判断滚动条距离底部多高的时候执行什么事件（也就是方法，函数），如：

    api.addEventListener({
        name:'scrolltobottom',
        extra:{
            threshold:0            //设置距离底部多少距离时触发，默认值为0，数字类型
        }
    },function(ret,err){
        // 加载下一页的数据，然后向现有页面追加数据。
    });


知识点三：上拉分页（加载下一页数据）原理

    数据非常多的时候都需要分页显示，比如一页显示多少条，或者一页加载多少条显示，在app上实现也非常简单，主要是通过HTML5的Local Storage或者

    偏好设置setPrefs和getPrefs来存储当前的页码，当这样要注意的一个东西就是，如果该页面执行了下拉刷新后应将页码重置为1，如果没有执行则一直累加到最后的页码。

    实现分页有以下步骤：

         1） 设置每页显示多少条，入：10条，        

                 var pageSize=10;

         2）设置该页面默认请求的页数为第一页：

                $api.setStorage("currentPage", 1);

         3）将pageSize参数和通过$api.getStorage("currentPage")获取到的当前页码一并通过api.ajax提交到服务器端，然后服务器端返回json格式可以如下面格式：
     {
       pageSize:10,  // 页码
       currentPage:1,  // 当前页
       totalCount:100,  // 总记录数
       totalPages:10,   // 总页数
       data:[           // 当前页查询的记录
               {id:1,name:'新生帝',age:22},
               {id:2,name:'流浪男',age:28}
       ]
    }

        4）详细步骤如下：  

              a）定义一些变量存储当前页码，总页数，总记录数

                     var pageSize=10; // 页容量
                     var totalData=0;  //定义一个变量存储第一次加载返回来的总记录数
                     var totalPages=0;  // 定义一个变量存储第一次加载返回来的总页数
                     $api.setStorage("currentPage", 1); // 默认设置为第一页

              b）编写一个通用刷新和加载下一页的方法：

                         // 加载数据
                        // @currentPage:当前页码
                          // @isReload：是否为刷新操作
    function loadData(currentPage,isReload){
            currentPage=isReload?1:currentPage;
            api.ajax({
                    url: 'http://www.xxx.com/api/getdata/?pagesize='+pageSize+"&page="+currentPage,
                    method: 'get',
                    timeout: 30,
                    dataType: 'json',
                    returnAll:false,
                    data:{ }
            },function(ret,err){
                    if (ret) {
                        totalData=ret.totalCount;
                        totalPages=ret.totalPages;
                            if(isReload)){
                                    $api.setStorage("currentPage", 1);        // 重新设置为1
                            }
                            
                            var data=ret.data;
                            // 渲染HTML
                            
                   api.refreshHeaderLoadDone();
                    }else {
                            api.alert({
                                    msg:('错误码：'+err.code+'；错误信息：'+err.msg+'；网络状态码：'+err.statusCode)
                            });


             c）结合下拉刷新：

    // 结合下拉刷新
    api.setRefreshHeaderInfo({
            visible: true,
            loadingImg: 'widget://image/refresh.png',
            bgColor: '#ccc',
            textColor: '#fff',
            textDown: '下拉刷新...',
            textUp: '松开刷新...',
            showTime: true
    }, function(ret, err){

            loadData(1,true); // 第一次加载

    });

            d）默认第一次打开页面就下拉加载数据

                  // 默认第一次打开页面就下拉加载数据
                  api.refreshHeaderLoading();  此时 totalData  totalPages 会自动赋值了

             e）结合上拉加载下一页：

                     // 结合上拉刷新：
    api.addEventListener({
            name:'scrolltobottom',
            extra:{
                    threshold:0 //设置距离底部多少距离时触发，默认值为0，数字类型
            }
    },function(ret,err){
      var _page=parseInt($api.getStorage("currentPage"));
      if(_page+1<=totalPages){
            loadData(_page+1,false);
            $api.setStorage("currentPage", _page+1); // 页码+1
      }
      else{
            alert("没有更多数据了！");
      }
    });
                
---------------------------------------------------------------------------------------------

     完整代码如下：

var pageSize=10; // 页容量
var totalData=0;  //定义一个变量存储第一次加载返回来的总记录数
var totalPages=0;  // 定义一个变量存储第一次加载返回来的总页数
$api.setStorage("currentPage", 1); // 默认设置为第一页

// 加载数据
// @currentPage:当前页码
// @isReload：是否为刷新操作
function loadData(currentPage,isReload){
        currentPage=isReload?1:currentPage;
        api.ajax({
                url: 'http://www.xxx.com/api/getdata/?pagesize='+pageSize+"&page="+currentPage,
                method: 'get',
                timeout: 30,
                dataType: 'json',
                returnAll:false,
                data:{ }
        },function(ret,err){
                if (ret) {
                    totalData=ret.totalCount;
                    totalPages=ret.totalPages;
                        if(isReload)){
                                $api.setStorage("currentPage", 1);        // 重新设置为1
                        }
                        
                        var data=ret.data;
                        // 渲染HTML
                        
                }else {
                        api.alert({
                                msg:('错误码：'+err.code+'；错误信息：'+err.msg+'；网络状态码：'+err.statusCode)
                        });
                }
        });
}

// 结合下拉刷新
api.setRefreshHeaderInfo({
        visible: true,
        loadingImg: 'widget://image/refresh.png',
        bgColor: '#ccc',
        textColor: '#fff',
        textDown: '下拉刷新...',
        textUp: '松开刷新...',
        showTime: true
}, function(ret, err){

        loadData(1,true); // 第一次加载
        api.refreshHeaderLoadDone();
});

// 默认第一次打开页面就下拉加载数据
api.refreshHeaderLoading();  此时 totalData  totalPages 会自动赋值了


// 结合上拉刷新：
api.addEventListener({
        name:'scrolltobottom',
        extra:{
                threshold:0 //设置距离底部多少距离时触发，默认值为0，数字类型
        }
},function(ret,err){
  var _page=parseInt($api.getStorage("currentPage"));
  if(_page+1<=totalPages){
        loadData(_page+1,false);
        $api.setStorage("currentPage", _page+1); // 页码+1
  }
  else{
        alert("没有更多数据了！");
  }
});